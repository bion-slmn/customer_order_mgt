name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      AFRICA_TALKING_API_KEY: ${{ secrets.AFRICA_TALKING_API_KEY }}
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests with Coverage
      run: |
        pip install coverage
        coverage run --source=. manage.py test

    - name: Generate Coverage Report
      run: |
        coverage report
        # Optionally, generate an HTML report for easier viewing
        coverage html
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
    

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_DEPLOY_SA }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_LOCATION }}-docker.pkg.dev
    
    
    - name: Build and Push Docker image  
      run: |
        IMAGE_URI="europe-southwest1-docker.pkg.dev/savanah-461107/my-python-repo/django-app:latest"
        docker build -t "$IMAGE_URI" .
        docker push "$IMAGE_URI"
    
    # In your GitHub Actions workflow file (.github/workflows/deploy.yml)
    - name: Write env file from secrets
      run: |
        cat <<EOF > .env.yaml
        AFRICA_TALKING_API_KEY: "${{ secrets.AFRICA_TALKING_API_KEY }}"
        DJANGO_SECRET_KEY: "${{ secrets.DJANGO_SECRET_KEY }}"
        DJANGO_ENV: "development"
        CLIENT_SECRET: "${{ secrets.CLIENT_SECRET }}"
        CLIENT_ID: "${{ secrets.CLIENT_ID }}"
        GOOGLE_OAUTH_CALLBACK_URL: "http://localhost:8000/api/v1/auth/google/callback/" # You might want to make this a secret too if it changes per environment
        EMAIL_HOST: "smtp.gmail.com" # Consider if this should be a secret
        EMAIL_PORT: 587 # Consider if this should be a secret
        EMAIL_HOST_USER: "${{ secrets.EMAIL_HOST_USER }}"
        EMAIL_HOST_PASSWORD: "${{ secrets.EMAIL_HOST_PASSWORD }}"
        EMAIL_USE_TLS: True # Consider if this should be a secret
        ADMIN_USER_EMAIL: "bionsol25@gmail.com" # Consider if this should be a secret
        EOF
    - name: Deploy to Cloud Run
      run: |
        IMAGE_URI="europe-southwest1-docker.pkg.dev/savanah-461107/my-python-repo/django-app:latest"
        gcloud run deploy my-python-app \
          --image "$IMAGE_URI" \
          --platform managed \
          --region europe-southwest1 \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 1 \
          --env-vars-file .env.yaml \
          --allow-unauthenticated

        
